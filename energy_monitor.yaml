substitutions:
# Change the disp_name to something you want  
  project: Energy Monitor
# Interval of how often the power is updated
  update_time: 10s
  ctTune: "27681"

esphome:
  name: energy_monitor
  platform: ESP32
  board: nodemcu-32s
   
wifi:
  !include common/wifi.yaml

  
<<: !include common/api.yaml
# Enable logging
logger:

<<: !include common/ota.yaml

web_server:
  port: 80

spi:
  clk_pin: 18
  miso_pin: 19
  mosi_pin: 23


sensor:
  - platform: wifi_signal
    name: ${project} WiFi Signal
    update_interval: 60s
  - platform: atm90e32
    cs_pin: 5
    phase_a:
      voltage:
        name: "Volts A"
        id: "ic1Volts"
        accuracy_decimals: 1
      current:
        name: "Pool Amps"
        id: "poolAmps"
        accuracy_decimals: 2
      gain_voltage: 7063
      gain_ct: ${ctTune}
    phase_b:
      current:
        name: "Air Conditioner Amps"
        id: "acAmps"
      gain_voltage: 7063
      gain_ct: ${ctTune}
    frequency:
      name: "Freq"
    line_frequency: 60Hz
    gain_pga: 1X
    update_interval: $update_time
  - platform: template
    name: "Pool Power"
    id: poolPower
    lambda: return id(poolAmps).state * id(ic1Volts).state * 2;
    unit_of_measurement: W
    update_interval: ${update_time}
  - platform: template
    name: "Air Conditioner Power"
    id: acPower
    lambda: return id(acAmps).state * id(ic1Volts).state * 2;
    unit_of_measurement: W
    update_interval: ${update_time}
  - platform: total_daily_energy
    name: Pool Total kWh
    power_id: poolPower
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh
  - platform: total_daily_energy
    name: AC Total kWh
    power_id: acPower
    filters:
      - multiply: 0.001
    unit_of_measurement: kWh

    
time:
  - platform: sntp
    id: sntp_time    
    
switch:
  - platform: restart
    name: ${project} Restart     
